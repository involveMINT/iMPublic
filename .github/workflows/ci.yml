# name: CI

# # Run on all pushes (except release/* and tags) and on every PR
# on:
#   push:
#     branches-ignore:
#       - '*'
#     tags-ignore:
#       - 'v*'
#   pull_request: {}

# jobs:
#   build-and-test:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: [16.20.2]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}

#       - name: Install dependencies
#         run: npm ci

#       - name: Lint
#         run: npm run lint

#       - name: Run tests
#         run: npm run test

#       - name: Build all
#         run: npm run build

name: Merge To Main

on:
  pull_request:
    branches:
      - main

env:
  TEST_GCP_PROJECT: ${{ vars.IM_TEST_PROJECT_ID }}
  TEST_FIREBASE_PROJECT: ${{ vars.IM_TEST_PROJECT_ID }}
  NODE_VERSION: 22.13.0

jobs:
  deploy-test:
    name: ▶️ Deploy → Test (MANUAL)
    environment: Test
    runs-on: ubuntu-latest
    concurrency:
      group: test-environment
      # allow only one "waiting for approval" + "running" job in that group
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        run: npm ci

      - name: Install nx@12.3.6
        run: npm install -g nx@12.3.6

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Generate API Environment (test)
        run: npx ts-node ./util/generate_environment.ts generate test
        env:
          INVOLVEMINT_SETTINGS: ${{ secrets.INVOLVEMINT_TEST_SETTINGS_SERVER }}

      - name: Build (test)
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          nx run-many --target=build --projects=api,involvemint --configuration=test --skip-nx-cache

      - name: Deploy API to App Engine (Test)
        run: |
          # sanitize
          BRANCH=${{github.sha}}
          BRANCH=${BRANCH,,};                   # lowercase
          BRANCH=${BRANCH//[^a-z0-9-]/-};       # replace invalid chars
          BRANCH=${BRANCH:0:63}               # trim to 63 chars
          # if it starts with a digit or hyphen, prefix a letter
          [[ $BRANCH =~ ^[0-9-] ]] && BRANCH="v$BRANCH"
          CALCVERSION="test-${BRANCH}"             # e.g. "test-feature-xyz"

          gcloud config set project ${{ env.TEST_GCP_PROJECT }}
          gcloud app deploy app.yaml \
            --stop-previous-version \
            --quiet \
            --version=${CALCVERSION}

      - name: Delete API Environment (test)
        run: npx ts-node ./util/generate_environment.ts delete test
      
      - name: Generate Client Environment (test)
        run: npx ts-node ./util/generate_environment.ts generate test
        env:
          INVOLVEMINT_SETTINGS: ${{ secrets.INVOLVEMINT_TEST_SETTINGS_CLIENT }}
      
      - name: Install firebase-tools@13.29.0
        run: npm install -g firebase-tools@13.29.0
      
      - name: Deploy Client to Firebase
        run: |
          firebase use ${{ env.TEST_FIREBASE_PROJECT }}
          firebase deploy --message "Test deploy: ${{ github.sha }}"

  test-env-verified:
    name: ▶️ Deploy → Test (MANUAL)
    environment: Test
    runs-on: ubuntu-latest
    needs: deploy-test
    steps:
      - run: echo "Testing in TEST environment has been completed, approved by."



