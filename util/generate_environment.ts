import * as fs from 'fs';
import * as path from 'path';
import { Env } from '../libs/shared/domain/src/lib/environments/environment.interface';


/**
 * Generates an Angular environment file matching the Env interface.
 * @param configName The target configuration: 'test', 'prod', or 'local'.
 */
function generateEnvironmentFile(filePath: string) {

  const envData: Env = JSON.parse(process.env.INVOLVEMINT_SETTINGS || '{}');

  console.log(envData);

  const fileContent = `// This file is autogenerated. Do not edit directly.\n` +
    `import { Env } from './environment.interface';\n\n` +
    `export const environment: Env = ${JSON.stringify(envData, null, 2)};\n`;

  fs.writeFileSync(filePath, fileContent, { encoding: 'utf-8' });
  console.log(`✅ Generated ${filePath}`);
}

// Entry point: first CLI arg is the config name (e.g. 'test', 'prod', or 'local')
const command = process.argv[2] || 'generate'
const configName = process.argv[3] || 'test';
try {
  const fileName = path.resolve(
    __dirname,
    `../libs/shared/domain/src/lib/environments/environment.${configName}.ts`);

  if(command === 'generate')
    generateEnvironmentFile(fileName);
  else
  {
    console.log(`Deleting ${fileName}`);
    fs.unlinkSync(fileName);
  }
} catch (err) {
  console.error('❌ Failed to generate environment file:', err);
  process.exit(1);
}
